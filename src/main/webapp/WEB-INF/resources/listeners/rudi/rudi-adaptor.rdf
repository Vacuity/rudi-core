<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE rdf:RDF [
	<!ENTITY via "http://www.vacuity.ai/onto/via/1.0/">
	<!ENTITY vi "http://www.vacuity.ai/onto/instances/1.0#">
    <!ENTITY xsd "http://www.w3.org/2001/XMLSchema#">
]>
<rdf:RDF xml:base="http://www.vacuity.ai/onto/instances/1.0"
     xmlns:via="http://www.vacuity.ai/onto/via/1.0/"
     xmlns:ma-ont="http://www.w3.org/ns/ma-ont/"
     xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
     xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#"
     xmlns:xsd="http://www.w3.org/2001/XMLSchema#"
     xmlns:owl="http://www.w3.org/2002/07/owl#"
     xmlns:dc="http://purl.org/dc/elements/1.1/"
     xmlns:sioc="http://rdfs.org/sioc/ns#"
 >
 	
 	<via:Listener rdf:about="#sponge-req-listener">
 		<rdfs:comment>Sponger Request Listener</rdfs:comment>
 		<rdfs:label>Sponger Request Listener</rdfs:label>
 		<via:event rdf:resource="#url"/>
		<via:notify rdf:resource="#virtuoso-sponger-sparql"/>
 	</via:Listener>
 	
 	<!-- IPs -->
 	
 	<via:Input rdf:about="#email">
 		<via:pattern rdf:datatype="&via;Regex">^([a-zA-Z0-9_\-\.]+)@([a-zA-Z0-9_\-\.]+)\.([a-zA-Z]{2,5})$</via:pattern>
 		<via:label_0>Email Address</via:label_0>
 	</via:Input>
 	
 	<via:Input rdf:about="#email_cmd">
 		<via:pattern>^do ${#email}</via:pattern>
 	</via:Input>
 	
 	<via:Input rdf:about="#phone_number">
 		<via:pattern rdf:datatype="&via;Regex">^(\+\d{1,2}\s)?\(?\d{3}\)?[\s.-]\d{3}[\s.-]\d{4}$</via:pattern>
 		<via:label_0>Phone Number</via:label_0>
 	</via:Input>
 	
 	<via:Input rdf:about="#phone_number_cmd">
 		<via:pattern>^do ${#phone_number}</via:pattern>
 	</via:Input>
 	
 	<via:Input rdf:about="#url">
 		<via:pattern rdf:datatype="&via;URL">http://example.com</via:pattern>
 		<via:label_0>URL</via:label_0>
 	</via:Input>
 	
 	<via:Input rdf:about="#uri">
 		<via:pattern rdf:datatype="&xsd;anyURI">http://example.com</via:pattern>
 		<via:label_0>URI</via:label_0>
 	</via:Input>
 	
 	<via:Input rdf:about="#date">
 		<via:pattern rdf:datatype="&xsd;dateTime">date</via:pattern>
 		<via:label_0>Date or Time</via:label_0>
 	</via:Input>
 	
 	<via:Input rdf:about="#address">
 		<via:pattern rdf:datatype="&via;address">address</via:pattern>
 		<via:label_0>Address</via:label_0>
 	</via:Input>
 	
 	<via:Input rdf:about="#geo">
 		<via:pattern rdf:datatype="&via;geo">-32.715, -77.03201</via:pattern>
 		<via:label_0>Geo Coordinates</via:label_0>
 	</via:Input>
 	
 	<via:Input rdf:about="#handle">
 		<via:pattern>^@\w*</via:pattern>
 		<via:label_0>Handle</via:label_0>
 	</via:Input>
 	
 	<via:Input rdf:about="#hashtag">
 		<via:pattern>^#\w*</via:pattern>
 		<via:label_0>Hashtag</via:label_0>
 	</via:Input>
 	
 	<!-- Sponger Output -->
 	<via:EventHandler rdf:about="#virtuoso-sponger">
 		<via:config>uriburner</via:config>
 		<via:rdf rdf:resource="http://myrudi.io/sparql?default-graph-uri=${0}&amp;query=DESCRIBE%20%3Chttp%3A%2F%2Flinkeddata.uriburner.com%2Fabout%2Fid%2FentIPy%2F${0}%3E&amp;output=application%2Frdf%2Bxml"/>
 		<via:log>Collecting hyperdata for '${0}' using Virtuoso Sponger</via:log>
 		<!-- be sure to add a timestamp before registering the log -->
 	</via:EventHandler>
 	
 	<via:EventHandler rdf:about="#virtuoso-sponger-sparql">
 		<via:config>uriburner</via:config>
 		<via:log>Collecting hyperdata for '${0}' using Virtuoso Sponger SPARQL endpoint</via:log> 		
 		<via:rdf rdf:resource="http://myrudi.io/sparql"/>
 		<via:query rdf:resource="#describe"/>
 		<!-- be sure to add a timestamp before registering the log -->
 	</via:EventHandler>
 	
 	<!--
/(http|https|ftp|ftps)\:\/\/[a-zA-Z0-9\-\.]+\.[a-zA-Z]{2,3}(\/\S*)?/ 	
 	-->
 	


 	<via:Listener rdf:about="#test-query-listener">
 		<rdfs:comment>SPARQL Listener example</rdfs:comment>
 		<rdfs:label>SPARQL Listener example</rdfs:label>
 		<via:event rdf:resource="#get_videos"/>
		<via:notify rdf:resource="#virtuoso-sponger"/>
 	</via:Listener>
	
	<via:TupleQuery rdf:about="#get_videos">
		<rdfs:label>get videos</rdfs:label>
 		<via:sparql>
<![CDATA[
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dc: <http://purl.org/dc/elements/1.1/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
select ?0 ?1 ?2 ?context where {
	graph ?context {
		?0 rdf:type <http://www.w3.org/ns/ma-ont/VideoTrack> .
		?0 dc:title ?1 .
		?0 dc:description ?2 .
	}
}
]]>
		</via:sparql>
 		<via:label_1>Listen for new Youtube vids submitted to the Index</via:label_1>
	</via:TupleQuery> 	


 	<via:Listener rdf:about="#test-query-listener-2">
 		<rdfs:comment>SPARQL Listener example (send email)</rdfs:comment>
 		<rdfs:label>SPARQL Listener example (send email)</rdfs:label>
 		<via:event rdf:resource="#get_videos-hold"/>
		<via:notify rdf:resource="#smonroe"/>
 	</via:Listener>
 	
 	
 	
 	
 	
 	
 	
 	
 	
 	
 	
 	
 	
 	
</rdf:RDF>